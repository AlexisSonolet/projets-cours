tirage_theta = rnorm(1, 0, 4 * sqrt(2))
tirage_final = rnorm(1, tirage_theta / 4, sqrt(2))
return(tirage_final)
}
simulation <- function(n){
tirage <- ()
simulation_unique <- function(){
tirage_theta = rnorm(1, 0, 4 * sqrt(2))
tirage_final = rnorm(1, tirage_theta / 4, sqrt(2))
return(tirage_final)
}
simulation <- function(n){
tirage <- c()
for (i in 1:n){
tirage <- c(tirage, simulation_unique())
}
}
simulation_unique <- function(){
tirage_theta = rnorm(1, 0, 4 * sqrt(2))
tirage_final = rnorm(1, tirage_theta / 4, sqrt(2))
return(tirage_final)
}
simulation <- function(n){
tirage <- c()
for (i in 1:n){
tirage <- c(tirage, simulation_unique())
}
}
simulation(100)
simulation_unique <- function(){
tirage_theta = rnorm(1, 0, 4 * sqrt(2))
tirage_final = rnorm(1, tirage_theta / 4, sqrt(2))
return(tirage_final)
}
simulation <- function(n){
tirage <- c()
for (i in 1:n){
tirage <- c(tirage, simulation_unique())
}
return tirage
simulation_unique <- function(){
tirage_theta = rnorm(1, 0, 4 * sqrt(2))
tirage_final = rnorm(1, tirage_theta / 4, sqrt(2))
return(tirage_final)
}
simulation <- function(n){
tirage <- c()
for (i in 1:n){
tirage <- c(tirage, simulation_unique())
}
return(tirage)
}
simulation(100)
simulation_unique <- function(){
tirage_theta = rnorm(1, 0, 4 * sqrt(2))
tirage_final = rnorm(1, tirage_theta / 4, sqrt(2))
return(tirage_final)
}
simulation <- function(n){
tirage <- c()
for (i in 1:n){
tirage <- c(tirage, simulation_unique())
}
return(tirage)
}
tirage = simulation(1000)
graph(tirage)
tirage = simulation(1000)
hist(tirage)
simulation_unique <- function(){
tirage_theta = rnorm(1, 0, 4 * sqrt(2))
tirage_y = rnorm(1, tirage_theta / 4, sqrt(2))
return(tirage_theta, tirage_y)
}
simulation <- function(n){
tirage <- c()
for (i in 1:n){
tirage_theta <- c(tirage_theta, simulation_unique()[0])
tirage_y <- c(tirage_y, simulation_unique()[1])
}
return(tirage_theta, tirage_y)
}
tirage = simulation(1000)
simulation_unique <- function(){
tirage_theta = rnorm(1, 0, 4 * sqrt(2))
tirage_y = rnorm(1, tirage_theta / 4, sqrt(2))
return(tirage_theta, tirage_y)
}
simulation <- function(n){
tirage_theta <- c()
tirage_y <- c()
for (i in 1:n){
tirage_theta <- c(tirage_theta, simulation_unique()[0])
tirage_y <- c(tirage_y, simulation_unique()[1])
}
return(tirage_theta, tirage_y)
}
tirage = simulation(1000)
tirage = simulation(1000)
tirage_theta, tirage_y = simulation(1000)
c(tirage_theta, tirage_y) = simulation(1000)
tirage <- simulation(1000)
simulation_unique <- function(){
tirage_theta = rnorm(1, 0, 4 * sqrt(2))
tirage_y = rnorm(1, tirage_theta / 4, sqrt(2))
return(c(tirage_theta, tirage_y))
}
simulation <- function(n){
tirage_theta <- c()
tirage_y <- c()
for (i in 1:n){
tirage_theta <- c(tirage_theta, simulation_unique()[0])
tirage_y <- c(tirage_y, simulation_unique()[1])
}
return(tirage_theta, tirage_y)
}
simulation_unique <- function(){
tirage_theta = rnorm(1, 0, 4 * sqrt(2))
tirage_y = rnorm(1, tirage_theta / 4, sqrt(2))
return(c(tirage_theta, tirage_y))
}
simulation <- function(n){
tirage_theta <- c()
tirage_y <- c()
for (i in 1:n){
simu = simulation_unique()
tirage_theta <- c(tirage_theta, simu()[0])
tirage_y <- c(tirage_y, simu[1])
}
return(tirage_theta, tirage_y)
}
simulation_unique <- function(){
tirage_theta = rnorm(1, 0, 4 * sqrt(2))
tirage_y = rnorm(1, tirage_theta / 4, sqrt(2))
return(c(tirage_theta, tirage_y))
}
simulation <- function(n){
tirage_theta <- c()
tirage_y <- c()
for (i in 1:n){
simu = simulation_unique()
tirage_theta <- c(tirage_theta, simu()[0])
tirage_y <- c(tirage_y, simu[1])
}
return(matrix(tirage_theta, tirage_y))
}
tirage <- simulation(1000)
simulation_unique <- function(){
tirage_theta = rnorm(1, 0, 4 * sqrt(2))
tirage_y = rnorm(1, tirage_theta / 4, sqrt(2))
return(c(tirage_theta, tirage_y))
}
simulation <- function(n){
tirage_theta <- c()
tirage_y <- c()
for (i in 1:n){
simu = simulation_unique()
tirage_theta <- c(tirage_theta, simu[0])
tirage_y <- c(tirage_y, simu[1])
}
return(matrix(tirage_theta, tirage_y))
}
tirage <- simulation(1000)
tirage <- simulation(1000)
tirage <- simulation(10)
tirage
help matrix
help(matrix)
simulation_unique <- function(){
tirage_theta = rnorm(1, 0, 4 * sqrt(2))
tirage_y = rnorm(1, tirage_theta / 4, sqrt(2))
return(c(tirage_theta, tirage_y))
}
simulation <- function(n){
tirage_theta <- c()
tirage_y <- c()
for (i in 1:n){
simu = simulation_unique()
tirage_theta <- c(tirage_theta, simu[0])
tirage_y <- c(tirage_y, simu[1])
}
return(list[tirage_theta, tirage_y])
}
tirage <- simulation(10)
simulation_unique <- function(){
tirage_theta = rnorm(1, 0, 4 * sqrt(2))
tirage_y = rnorm(1, tirage_theta / 4, sqrt(2))
return(c(tirage_theta, tirage_y))
}
simulation <- function(n){
tirage_theta <- c()
tirage_y <- c()
for (i in 1:n){
simu = simulation_unique()
tirage_theta <- c(tirage_theta, simu[0])
tirage_y <- c(tirage_y, simu[1])
}
return([tirage_theta, tirage_y])
simulation_unique <- function(){
tirage_theta = rnorm(1, 0, 4 * sqrt(2))
tirage_y = rnorm(1, tirage_theta / 4, sqrt(2))
return(c(tirage_theta, tirage_y))
}
simulation <- function(n){
tirage_theta <- c()
tirage_y <- c()
for (i in 1:n){
simu = simulation_unique()
tirage_theta <- c(tirage_theta, simu[0])
tirage_y <- c(tirage_y, simu[1])
}
oui = list[tirage_theta, tirage_y]
return(oui)
}
tirage <- simulation(10)
simulation_unique <- function(){
tirage_theta = rnorm(1, 0, 4 * sqrt(2))
tirage_y = rnorm(1, tirage_theta / 4, sqrt(2))
return(c(tirage_theta, tirage_y))
}
simulation <- function(n){
tirage_theta <- c()
tirage_y <- c()
for (i in 1:n){
simu = simulation_unique()
tirage_theta <- c(tirage_theta, simu[0])
tirage_y <- c(tirage_y, simu[1])
}
oui = [tirage_theta, tirage_y]
simulation_unique <- function(){
tirage_theta = rnorm(1, 0, 4 * sqrt(2))
tirage_y = rnorm(1, tirage_theta / 4, sqrt(2))
return(c(tirage_theta, tirage_y))
}
simulation <- function(n){
tirage_theta <- c()
tirage_y <- c()
for (i in 1:n){
simu = simulation_unique()
tirage_theta <- c(tirage_theta, simu[0])
tirage_y <- c(tirage_y, simu[1])
}
oui <- [tirage_theta, tirage_y]
simulation_unique <- function(){
tirage_theta = rnorm(1, 0, 4 * sqrt(2))
tirage_y = rnorm(1, tirage_theta / 4, sqrt(2))
return(c(tirage_theta, tirage_y))
}
simulation <- function(n){
tirage_theta <- c()
tirage_y <- c()
for (i in 1:n){
simu = simulation_unique()
tirage_theta <- c(tirage_theta, simu[0])
tirage_y <- c(tirage_y, simu[1])
}
oui <- list[tirage_theta, tirage_y]
return(oui)
}
tirage <- simulation(10)
[1, 2, 3]
list[1, 2, 3]
c(1, 2 ,3)
mdat <- matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3, byrow = TRUE,
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3")))
mdat
simulation_unique <- function(){
tirage_theta = rnorm(1, 0, 4 * sqrt(2))
tirage_y = rnorm(1, tirage_theta / 4, sqrt(2))
return(c(tirage_theta, tirage_y))
}
simulation <- function(n){
tirage_theta <- c()
tirage_y <- c()
for (i in 1:n){
simu = simulation_unique()
tirage_theta <- c(tirage_theta, simu[0])
tirage_y <- c(tirage_y, simu[1])
}
oui <- list(tirage_theta, tirage_y)
return(oui)
}
tirage <- simulation(10)
tirage <- simulation(10)
tirage
simulation_unique <- function(){
tirage_theta = rnorm(1, 0, 4 * sqrt(2))
tirage_y = rnorm(1, tirage_theta / 4, sqrt(2))
return(c(tirage_theta, tirage_y))
}
simulation <- function(n){
tirage_theta <- c()
tirage_y <- c()
for (i in 1:n){
simu = simulation_unique()
tirage_theta <- c(tirage_theta, simu[0])
tirage_y <- c(tirage_y, simu[1])
}
oui <- matrix[tirage_theta, tirage_y, nrow = 2, byrow = TRUE, list(c(theta, y))]
return(oui)
}
tirage <- simulation(10)
simulation_unique <- function(){
tirage_theta = rnorm(1, 0, 4 * sqrt(2))
tirage_y = rnorm(1, tirage_theta / 4, sqrt(2))
return(c(tirage_theta, tirage_y))
}
simulation <- function(n){
tirage_theta <- c()
tirage_y <- c()
for (i in 1:n){
simu = simulation_unique()
tirage_theta <- c(tirage_theta, simu[0])
tirage_y <- c(tirage_y, simu[1])
}
oui <- matrix[tirage_theta, tirage_y, nrow = 2, byrow = TRUE, list(c("theta", "y"))]
return(oui)
}
tirage <- simulation(10)
simulation_unique <- function(){
tirage_theta = rnorm(1, 0, 4 * sqrt(2))
tirage_y = rnorm(1, tirage_theta / 4, sqrt(2))
return(c(tirage_theta, tirage_y))
}
simulation <- function(n){
tirage_theta <- c()
tirage_y <- c()
for (i in 1:n){
simu = simulation_unique()
tirage_theta <- c(tirage_theta, simu[0])
tirage_y <- c(tirage_y, simu[1])
}
oui <- matrix[tirage_theta, tirage_y, nrow = 2, byrow = TRUE, c("theta", "y")]
return(oui)
}
tirage <- simulation(10)
simulation_unique <- function(){
tirage_theta = rnorm(1, 0, 4 * sqrt(2))
tirage_y = rnorm(1, tirage_theta / 4, sqrt(2))
return(c(tirage_theta, tirage_y))
}
simulation <- function(n){
tirage_theta <- c()
tirage_y <- c()
for (i in 1:n){
simu = simulation_unique()
tirage_theta <- c(tirage_theta, simu[0])
tirage_y <- c(tirage_y, simu[1])
}
oui <- matrix(tirage_theta, tirage_y, nrow = 2, byrow = TRUE, c("theta", "y"))
return(oui)
}
tirage <- simulation(10)
simulation_unique <- function(){
tirage_theta = rnorm(1, 0, 4 * sqrt(2))
tirage_y = rnorm(1, tirage_theta / 4, sqrt(2))
return(c(tirage_theta, tirage_y))
}
simulation <- function(n){
tirage_theta <- c()
tirage_y <- c()
for (i in 1:n){
simu = simulation_unique()
tirage_theta <- c(tirage_theta, simu[0])
tirage_y <- c(tirage_y, simu[1])
}
oui <- matrix(tirage_theta, tirage_y, nrow = 2, byrow = TRUE)
return(oui)
}
tirage <- simulation(10)
tirage <- simulation(10)
tirage
simulation_unique <- function(){
tirage_theta = rnorm(1, 0, 4 * sqrt(2))
tirage_y = rnorm(1, tirage_theta / 4, sqrt(2))
return(c(tirage_theta, tirage_y))
}
simulation <- function(n){
tirage_theta <- c()
tirage_y <- c()
for (i in 1:n){
simu = simulation_unique()
tirage_theta <- c(tirage_theta, simu[0])
tirage_y <- c(tirage_y, simu[1])
}
tirage_theta
tirage_y
oui <- matrix(tirage_theta, tirage_y, nrow = 2, byrow = TRUE)
return(oui)
}
simulation_theta <- function(n){
tirage_theta = rnorm(n, 0, 4 * sqrt(2))
return(tirage_theta)
}
simulation_y <- function(tirage_theta){
tirage_y = c()
for(theta in tirage_theta){
tirage_y = c(tirage_y, rnorm(1, theta / 4, sqrt(2)))
}
return(tirage_y)
}
tirage_theta <- simulation_theta(10)
tirage_y <- simulation_y(tirage_theta)
tirage_theta <- simulation_theta(10)
tirage_y <- simulation_y(tirage_theta)
tirage_theta
tirage_y
tirage_theta <- simulation_theta(10)
tirage_y <- simulation_y(tirage_theta)
tirage_theta <- simulation_theta(1000)
tirage_y <- simulation_y(tirage_theta)
help(graph)
tirage_theta <- simulation_theta(1000)
tirage_y <- simulation_y(tirage_theta)
lines(tirage_y, tirage_theta, type = p)
tirage_theta <- simulation_theta(1000)
tirage_y <- simulation_y(tirage_theta)
lines(tirage_y, tirage_theta, type = "p")
tirage_theta <- simulation_theta(1000)
tirage_y <- simulation_y(tirage_theta)
par(pch=22, col="grey")
lines(tirage_y, tirage_theta, type = "p")
tirage_theta <- simulation_theta(1000)
tirage_y <- simulation_y(tirage_theta)
par(pch=22, col="grey")
lines(tirage_y, tirage_theta)
help(plot)
tirage_theta <- simulation_theta(1000)
tirage_y <- simulation_y(tirage_theta)
par(pch=22, col="grey")
plot(tirage_y, tirage_theta, type = "p")
tirage_theta <- simulation_theta(1000)
tirage_y <- simulation_y(tirage_theta)
par(col="grey")
plot(tirage_y, tirage_theta, type = "p")
tirage_theta <- simulation_theta(1000)
tirage_y <- simulation_y(tirage_theta)
par(col="grey")
plot(tirage_y, tirage_theta, type = "p")
plot([-6:6], 2 * [-6:6])
simulation_theta <- function(n){
tirage_theta = rnorm(n, 0, 4 * sqrt(2))
return(tirage_theta)
}
simulation_y <- function(tirage_theta){
tirage_y = c()
for(theta in tirage_theta){
tirage_y = c(tirage_y, rnorm(1, theta / 4, sqrt(2)))
}
return(tirage_y)
}
simulation <- function(n){
theta <- simulation_theta(n)
y <- simulation_y(theta)
return(data.frame(y, theta))
}
tirage <- simulation(1000)
plot(tirage, type = "p", col = "grey")
lines((-6:6), 2 * (-6:6), type = "l", col = "blue")
# Question 6
#On crÃ©e le modÃ¨le linÃ©aire
reg_lin <- lm(tirage[,2] ~ tirage[,1])
#On affiche la droite de rÃ©gression linÃ©aire
abline(reg_lin, col = "red")
#on simule les tirages
tirage <- simulation(100000)
#on simule les tirages
tirage <- simulation(100000)
#On filtre les valeurs qui ne remplissent pas la condition
selection <- tirage[tirage$y > 1.99,]
selection <- selection[selection$y < 2.01,]
selection
theta = selection[,2]
hist(theta, freq = FALSE)
Gibbs <- function(n, nb_val_eleminees, theta0 = 0){
theta_t <- theta0 #Initialisation de theta
theta <- c()#vecteur stockant les valeurs de theta
y <- c() #vecteur stockant les valeurs de y
#On doit itÃ©rer n fois, plus le nombre de valeurs que l'on veut Ã©liminer
#en dÃ©but d'algorithme pour perdre les condition initiales
for (t in 1:(n + nb_val_eleminees)){
y_t <- rnorm(1, theta_t / 4, sqrt(2)) # On simule y_t
theta_t <- rnorm(1, 2 * y_t, 4) # On simule theta_t
#On ajoute les nouvelles valeurs aux vecteurs si on a Ã©liminÃ© assez de valeurs
if (t > nb_val_eleminees){
theta <- c(theta, theta_t)
y <- c(y, y_t)
}
}
return(data.frame(y, theta))
}
#On élimine la 1e valeur seulement
gibbs1 <- Gibbs(1000, 1)
plot(gibbs1, col = "brown")
lines((-6:6), 2 * (-6:6), type = "l", col = "blue")
#On élimine les 10 premières valeurs
gibbs10 <- Gibbs(1000, 10)
plot(gibbs10, col = "grey")
lines((-6:6), 2 * (-6:6), type = "l", col = "blue")
#On élimine les 100 premières valeurs
gibbs100 <- Gibbs(1000, 100)
plot(gibbs100, col = "red")
lines((-6:6), 2 * (-6:6), type = "l", col = "blue")
#On élimine les 500 premières valeurs
gibbs500 <- Gibbs(1000, 500)
plot(gibbs500, col = "black")
lines((-6:6), 2 * (-6:6), type = "l", col = "blue")
#On élimine les 10000 premières valeurs
gibbs10000 <- Gibbs(1000, 10000)
plot(gibbs10000, col = "green")
lines((-6:6), 2 * (-6:6), type = "l", col = "blue")
